# Telegraf Configuration for Energy AI
# File: /etc/telegraf/telegraf.d/energy_ai.conf
# Generated by Ansible - Energy Intelligence Role

# ================== ENERGY AI MQTT INPUTS ==================

# AI Predictions Input
[[inputs.mqtt_consumer]]
  servers = ["tcp://{{ mqtt_broker_host | default('localhost') }}:1883"]
  topics = [
    "{{ mqtt_ai.topics.predictions | default('energy/ai/predictions') }}/+",
    "{{ mqtt_ai.topics.performance | default('energy/ai/performance') }}"
  ]
  topic_tag = "topic"
  qos = 1
  connection_timeout = "30s"
  username = "iot"
  password = "iot123"
  client_id = "telegraf-energy-ai-predictions"
  
  data_format = "json"
  tag_keys = ["ai_model", "prediction_type", "confidence_level", "horizon"]
  json_time_key = "timestamp"
  json_time_format = "2006-01-02T15:04:05Z07:00"
  name_override = "energy_ai_predictions"
  
  [inputs.mqtt_consumer.tags]
    source = "energy_ai"
    component = "predictions"
    version = "{{ energy_ai.version | default('1.0.0') }}"

# Energy Scenarios Input
[[inputs.mqtt_consumer]]
  servers = ["tcp://{{ mqtt_broker_host | default('localhost') }}:1883"]
  topics = [
    "{{ mqtt_ai.topics.scenarios | default('energy/ai/scenarios') }}/executed",
    "{{ mqtt_ai.topics.scenarios | default('energy/ai/scenarios') }}/status",
    "{{ mqtt_ai.topics.scenarios | default('energy/ai/scenarios') }}/actions/+"
  ]
  topic_tag = "topic"
  qos = 1
  connection_timeout = "30s"
  username = "iot"
  password = "iot123"
  client_id = "telegraf-energy-scenarios"
  
  data_format = "json"
  tag_keys = ["scenario_name", "action_type", "priority", "trigger_reason"]
  json_time_key = "timestamp"
  json_time_format = "2006-01-02T15:04:05Z07:00"
  name_override = "energy_scenarios_data"
  
  [inputs.mqtt_consumer.tags]
    source = "energy_scenarios"
    component = "automation"
    version = "{{ energy_ai.version | default('1.0.0') }}"

# AI Recommendations Input
[[inputs.mqtt_consumer]]
  servers = ["tcp://{{ mqtt_broker_host | default('localhost') }}:1883"]
  topics = [
    "{{ mqtt_ai.topics.recommendations | default('energy/ai/recommendations') }}"
  ]
  topic_tag = "topic"
  qos = 1
  connection_timeout = "30s"
  username = "iot"
  password = "iot123"
  client_id = "telegraf-energy-recommendations"
  
  data_format = "json"
  tag_keys = ["recommendation_type", "priority", "category"]
  json_time_key = "timestamp"
  json_time_format = "2006-01-02T15:04:05Z07:00"
  name_override = "energy_ai_recommendations"
  
  [inputs.mqtt_consumer.tags]
    source = "energy_ai"
    component = "recommendations"
    version = "{{ energy_ai.version | default('1.0.0') }}"

# Weather ML Input
[[inputs.mqtt_consumer]]
  servers = ["tcp://{{ mqtt_broker_host | default('localhost') }}:1883"]
  topics = [
    "{{ mqtt_ai.topics.weather_ml | default('energy/ai/weather') }}/forecast",
    "{{ mqtt_ai.topics.weather_ml | default('energy/ai/weather') }}/accuracy"
  ]
  topic_tag = "topic"
  qos = 1
  connection_timeout = "30s"
  username = "iot"
  password = "iot123"
  client_id = "telegraf-weather-ml"
  
  data_format = "json"
  tag_keys = ["forecast_type", "model_version", "accuracy_level"]
  json_time_key = "timestamp"
  json_time_format = "2006-01-02T15:04:05Z07:00"
  name_override = "weather_ml_data"
  
  [inputs.mqtt_consumer.tags]
    source = "weather_ml"
    component = "forecasting"
    version = "{{ energy_ai.version | default('1.0.0') }}"

# Cost Optimization Input
[[inputs.mqtt_consumer]]
  servers = ["tcp://{{ mqtt_broker_host | default('localhost') }}:1883"]
  topics = [
    "{{ mqtt_ai.topics.cost_optimization | default('energy/ai/costs') }}/results",
    "{{ mqtt_ai.topics.cost_optimization | default('energy/ai/costs') }}/arbitrage"
  ]
  topic_tag = "topic"
  qos = 1
  connection_timeout = "30s"
  username = "iot"
  password = "iot123"
  client_id = "telegraf-cost-optimization"
  
  data_format = "json"
  tag_keys = ["optimization_type", "strategy", "profitability"]
  json_time_key = "timestamp"
  json_time_format = "2006-01-02T15:04:05Z07:00"
  name_override = "cost_optimization_data"
  
  [inputs.mqtt_consumer.tags]
    source = "cost_optimizer"
    component = "optimization"
    version = "{{ energy_ai.version | default('1.0.0') }}"

# Carbon Footprint Input
[[inputs.mqtt_consumer]]
  servers = ["tcp://{{ mqtt_broker_host | default('localhost') }}:1883"]
  topics = [
    "energy/carbon/footprint",
    "energy/carbon/summary",
    "energy/carbon/alerts"
  ]
  topic_tag = "topic"
  qos = 1
  connection_timeout = "30s"
  username = "iot"
  password = "iot123"
  client_id = "telegraf-carbon-footprint"
  
  data_format = "json"
  tag_keys = ["performance_level", "source"]
  json_time_key = "timestamp"
  json_time_format = "2006-01-02T15:04:05Z07:00"
  name_override = "carbon_footprint_data"
  
  [inputs.mqtt_consumer.tags]
    source = "carbon_calculator"
    component = "sustainability"
    version = "{{ energy_ai.version | default('1.0.0') }}"
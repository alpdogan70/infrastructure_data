---
- name: Create minio group
  group:
    name: minio
    state: present

- name: Create minio user
  user:
    name: minio
    group: minio
    shell: /bin/bash
    home: /var/lib/minio
    createhome: yes
    state: present

- name: Download MinIO binary
  get_url:
    url: https://dl.min.io/server/minio/release/linux-amd64/minio
    dest: /usr/local/bin/minio
    mode: '0755'
    owner: root
    group: root

- name: Download MinIO client
  get_url:
    url: https://dl.min.io/client/mc/release/linux-amd64/mc
    dest: /usr/local/bin/mc
    mode: '0755'
    owner: root
    group: root

- name: Create MinIO directories
  file:
    path: "{{ item }}"
    state: directory
    owner: minio
    group: minio
    mode: '0755'
  loop:
    - /etc/minio
    - /var/lib/minio
    - "{{ minio_data_dir }}"

- name: Create MinIO environment file
  template:
    src: minio.env.j2
    dest: /etc/minio/minio.env
    owner: minio
    group: minio
    mode: '0600'
  notify: restart minio

- name: Create systemd service file
  template:
    src: minio.service.j2
    dest: /etc/systemd/system/minio.service
  notify:
    - reload systemd
    - restart minio

- name: Enable and start MinIO
  systemd:
    name: minio
    enabled: yes
    state: started
    daemon_reload: yes

- name: Wait for MinIO to be ready
  wait_for:
    port: 9000
    host: "{{ ansible_default_ipv4.address }}"
    delay: 10
    timeout: 60


- name: Install MinIO client if not present
  get_url:
    url: https://dl.min.io/client/mc/release/linux-amd64/mc
    dest: /usr/local/bin/mc
    mode: '0755'
    owner: root
    group: root

- name: Wait for MinIO API to be fully ready
  uri:
    url: "http://127.0.0.1:9000/minio/health/live"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 30
  delay: 2

- name: Configure MinIO client
  shell: |
    mc alias remove local 2>/dev/null || true
    mc alias set local http://127.0.0.1:9000 {{ minio_access_key }} {{ minio_secret_key }}
  environment:
    MC_HOST_local: "http://{{ minio_access_key }}:{{ minio_secret_key }}@127.0.0.1:9000"

- name: Check if bucket exists
  shell: |
    mc ls local/backups-consul 2>/dev/null
  register: bucket_check
  failed_when: false
  changed_when: false

- name: Create backup bucket
  shell: |
    mc mb local/backups-consul
  when: bucket_check.rc != 0

- name: Verify bucket creation
  shell: |
    mc ls local/
  register: bucket_list

- name: Show buckets
  debug:
    var: bucket_list.stdout_lines
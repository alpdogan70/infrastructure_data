---
# tasks file for roles/monitoring/grafana

- name: install gpg
  apt:
    name: gnupg,software-properties-common
    state: present
    update_cache: yes
    cache_valid_time: 3600

#- name: add gpg hey
#  apt_key:
#    url: "https://packages.grafana.com/gpg.key"
#    validate_certs: yes
#
#- name: add repository
#  apt_repository:
#    repo: "deb https://packages.grafana.com/oss/deb stable main"
#    state: present
#    validate_certs: yes
#
#- name: install grafana
#  apt:
#    name: grafana
#    state: present
#    update_cache: yes
#    cache_valid_time: 3600

- name: install grafana
  apt:
    deb: https://dl.grafana.com/oss/release/grafana_10.4.1_amd64.deb

- name: change admin user
  lineinfile:
    path: /etc/grafana/grafana.ini
    regexp: "{{ item.before }}"
    line: "{{ item.after }}"
  with_items:
  - { before: "^;admin_user = admin", after: "admin_user = {{ grafana_admin_user }}"}
  - { before: "^;admin_password = admin", after: "admin_password = {{ grafana_admin_password }}"}

- name: start service grafana-server
  systemd:
    name: grafana-server
    state: started
    enabled: yes

- name: wait for service up
  uri:
    url: "http://127.0.0.1:3000"
    status_code: 200
  register: __result
  until: __result.status == 200
  retries: 120
  delay: 1

- name: change admin password for grafana gui
  shell : "grafana-cli admin reset-admin-password {{ grafana_admin_password }}"
  register: __command_admin

# ansible-galaxy collection install community.grafana
- name: add victoriametrics datasource
  grafana_datasource:
    name: "{{ item.name }}"
    grafana_url: "http://127.0.0.1:3000"
    grafana_user: "{{ grafana_admin_user }}"
    grafana_password: "{{ grafana_admin_password }}"
    org_id: "1"
    ds_type: "{{ item.type }}"
    ds_url: "http://{{ item.address }}"
  loop: "{{ grafana_datasources }}"
  changed_when: false
  ignore_errors: true

- name: "Create dashboard - {{ item.label }}"
  include_tasks: create_dashboard.yml
  loop: "{{ grafana_dashboards }}"

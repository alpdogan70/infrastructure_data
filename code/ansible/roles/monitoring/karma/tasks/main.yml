---
# tasks file for roles/karma

- name: check if karma exists
  stat:
    path: /usr/local/bin/karma
  register: __karma_exists
  
- name: if karma exists get version
  shell: "cat /etc/systemd/system/karma.service | grep Version | sed s/'.*Version '//g"
  register: __get_karma_version
  when: __karma_exists.stat.exists == true
  changed_when: false

- name: create user karma
  user:
    name: "{{ karma_user }}"
    system: yes
    shell: /sbin/nologin
    state: present

- name: create directory for karma configuration
  file:
    path: "{{ karma_dir_config }}"
    state: directory
    owner: "{{ karma_user }}"
    group: "{{ karma_user }}"
    mode: 0750

- name: download karma
  unarchive: 
    src: "https://github.com/prymitive/karma/releases/download/v{{ karma_version }}/karma-linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: yes
  when: __karma_exists.stat.exists == False or not __get_karma_version.stdout == karma_version

- name: move the binary to the final destination
  copy:
    src: "/tmp/karma-linux-amd64"
    dest: "/usr/local/bin/karma"
    mode: 0750
    owner: "{{ karma_user }}"
    group: "{{ karma_user }}"
    remote_src: yes
  when: __karma_exists.stat.exists == False or not __get_karma_version.stdout == karma_version

- name: karma systemd file
  template:
    src: "karma.service.j2"
    dest: "/etc/systemd/system/karma.service"         
    mode: 0750
  notify: "restart_karma"

- name: karma configuration file
  template:
    src: "karma.yml.j2"
    dest: "{{ karma_dir_config }}/karma.yml"      
    mode: 0750
    owner: "{{ karma_user }}"
    group: "{{ karma_user }}"
  notify: "restart_karma"

- meta: flush_handlers

- name: start karma
  systemd:
    name: karma
    state: started
    enabled: yes
